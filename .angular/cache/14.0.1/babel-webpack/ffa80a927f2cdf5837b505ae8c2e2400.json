{"ast":null,"code":"import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n  return source => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator {\n  constructor(keySelector, flushes) {\n    this.keySelector = keySelector;\n    this.flushes = flushes;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n\n}\n\nexport class DistinctSubscriber extends SimpleOuterSubscriber {\n  constructor(destination, keySelector, flushes) {\n    super(destination);\n    this.keySelector = keySelector;\n    this.values = new Set();\n\n    if (flushes) {\n      this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  notifyNext() {\n    this.values.clear();\n  }\n\n  notifyError(error) {\n    this._error(error);\n  }\n\n  _next(value) {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  _useKeySelector(value) {\n    let key;\n    const {\n      destination\n    } = this;\n\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    this._finalizeNext(key, value);\n  }\n\n  _finalizeNext(key, value) {\n    const {\n      values\n    } = this;\n\n    if (!values.has(key)) {\n      values.add(key);\n      this.destination.next(value);\n    }\n  }\n\n}","map":{"version":3,"names":["SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","distinct","keySelector","flushes","source","lift","DistinctOperator","constructor","call","subscriber","subscribe","DistinctSubscriber","destination","values","Set","add","notifyNext","clear","notifyError","error","_error","_next","value","_useKeySelector","_finalizeNext","key","err","has","next"],"sources":["c:/temp/module_federation_nx_mono_repo/node_modules/rxjs/_esm2015/internal/operators/distinct.js"],"sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n    return (source) => source.lift(new DistinctOperator(keySelector, flushes));\n}\nclass DistinctOperator {\n    constructor(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n}\nexport class DistinctSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, keySelector, flushes) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.values = new Set();\n        if (flushes) {\n            this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n        }\n    }\n    notifyNext() {\n        this.values.clear();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    _next(value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    }\n    _useKeySelector(value) {\n        let key;\n        const { destination } = this;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    }\n    _finalizeNext(key, value) {\n        const { values } = this;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,cAAhC,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,QAAT,CAAkBC,WAAlB,EAA+BC,OAA/B,EAAwC;EAC3C,OAAQC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,gBAAJ,CAAqBJ,WAArB,EAAkCC,OAAlC,CAAZ,CAAnB;AACH;;AACD,MAAMG,gBAAN,CAAuB;EACnBC,WAAW,CAACL,WAAD,EAAcC,OAAd,EAAuB;IAC9B,KAAKD,WAAL,GAAmBA,WAAnB;IACA,KAAKC,OAAL,GAAeA,OAAf;EACH;;EACDK,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;IACrB,OAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,kBAAJ,CAAuBF,UAAvB,EAAmC,KAAKP,WAAxC,EAAqD,KAAKC,OAA1D,CAAjB,CAAP;EACH;;AAPkB;;AASvB,OAAO,MAAMQ,kBAAN,SAAiCb,qBAAjC,CAAuD;EAC1DS,WAAW,CAACK,WAAD,EAAcV,WAAd,EAA2BC,OAA3B,EAAoC;IAC3C,MAAMS,WAAN;IACA,KAAKV,WAAL,GAAmBA,WAAnB;IACA,KAAKW,MAAL,GAAc,IAAIC,GAAJ,EAAd;;IACA,IAAIX,OAAJ,EAAa;MACT,KAAKY,GAAL,CAAShB,cAAc,CAACI,OAAD,EAAU,IAAIH,qBAAJ,CAA0B,IAA1B,CAAV,CAAvB;IACH;EACJ;;EACDgB,UAAU,GAAG;IACT,KAAKH,MAAL,CAAYI,KAAZ;EACH;;EACDC,WAAW,CAACC,KAAD,EAAQ;IACf,KAAKC,MAAL,CAAYD,KAAZ;EACH;;EACDE,KAAK,CAACC,KAAD,EAAQ;IACT,IAAI,KAAKpB,WAAT,EAAsB;MAClB,KAAKqB,eAAL,CAAqBD,KAArB;IACH,CAFD,MAGK;MACD,KAAKE,aAAL,CAAmBF,KAAnB,EAA0BA,KAA1B;IACH;EACJ;;EACDC,eAAe,CAACD,KAAD,EAAQ;IACnB,IAAIG,GAAJ;IACA,MAAM;MAAEb;IAAF,IAAkB,IAAxB;;IACA,IAAI;MACAa,GAAG,GAAG,KAAKvB,WAAL,CAAiBoB,KAAjB,CAAN;IACH,CAFD,CAGA,OAAOI,GAAP,EAAY;MACRd,WAAW,CAACO,KAAZ,CAAkBO,GAAlB;MACA;IACH;;IACD,KAAKF,aAAL,CAAmBC,GAAnB,EAAwBH,KAAxB;EACH;;EACDE,aAAa,CAACC,GAAD,EAAMH,KAAN,EAAa;IACtB,MAAM;MAAET;IAAF,IAAa,IAAnB;;IACA,IAAI,CAACA,MAAM,CAACc,GAAP,CAAWF,GAAX,CAAL,EAAsB;MAClBZ,MAAM,CAACE,GAAP,CAAWU,GAAX;MACA,KAAKb,WAAL,CAAiBgB,IAAjB,CAAsBN,KAAtB;IACH;EACJ;;AAzCyD"},"metadata":{},"sourceType":"module"}