{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n  return source => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\nexport class SequenceEqualOperator {\n  constructor(compareTo, comparator) {\n    this.compareTo = compareTo;\n    this.comparator = comparator;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  }\n\n}\nexport class SequenceEqualSubscriber extends Subscriber {\n  constructor(destination, compareTo, comparator) {\n    super(destination);\n    this.compareTo = compareTo;\n    this.comparator = comparator;\n    this._a = [];\n    this._b = [];\n    this._oneComplete = false;\n    this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  _next(value) {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n\n      this.checkValues();\n    }\n  }\n\n  _complete() {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n\n    this.unsubscribe();\n  }\n\n  checkValues() {\n    const {\n      _a,\n      _b,\n      comparator\n    } = this;\n\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n\n      let b = _b.shift();\n\n      let areEqual = false;\n\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value) {\n    const {\n      destination\n    } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n\n      this.checkValues();\n    }\n  }\n\n  completeB() {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n}\n\nclass SequenceEqualCompareToSubscriber extends Subscriber {\n  constructor(destination, parent) {\n    super(destination);\n    this.parent = parent;\n  }\n\n  _next(value) {\n    this.parent.nextB(value);\n  }\n\n  _error(err) {\n    this.parent.error(err);\n    this.unsubscribe();\n  }\n\n  _complete() {\n    this.parent.completeB();\n    this.unsubscribe();\n  }\n\n}","map":{"version":3,"names":["Subscriber","sequenceEqual","compareTo","comparator","source","lift","SequenceEqualOperator","constructor","call","subscriber","subscribe","SequenceEqualSubscriber","destination","_a","_b","_oneComplete","add","SequenceEqualCompareToSubscriber","_next","value","length","emit","push","checkValues","_complete","unsubscribe","a","shift","b","areEqual","e","error","next","complete","nextB","completeB","parent","_error","err"],"sources":["c:/temp/module_federation_nx_mono_repo/node_modules/rxjs/_esm2015/internal/operators/sequenceEqual.js"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n    return (source) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\nexport class SequenceEqualOperator {\n    constructor(compareTo, comparator) {\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    }\n}\nexport class SequenceEqualSubscriber extends Subscriber {\n    constructor(destination, compareTo, comparator) {\n        super(destination);\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    _next(value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    }\n    _complete() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n        this.unsubscribe();\n    }\n    checkValues() {\n        const { _a, _b, comparator } = this;\n        while (_a.length > 0 && _b.length > 0) {\n            let a = _a.shift();\n            let b = _b.shift();\n            let areEqual = false;\n            try {\n                areEqual = comparator ? comparator(a, b) : a === b;\n            }\n            catch (e) {\n                this.destination.error(e);\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    }\n    emit(value) {\n        const { destination } = this;\n        destination.next(value);\n        destination.complete();\n    }\n    nextB(value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    }\n    completeB() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    }\n}\nclass SequenceEqualCompareToSubscriber extends Subscriber {\n    constructor(destination, parent) {\n        super(destination);\n        this.parent = parent;\n    }\n    _next(value) {\n        this.parent.nextB(value);\n    }\n    _error(err) {\n        this.parent.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.completeB();\n        this.unsubscribe();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}